//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ESBackupManager.ESBackupServerAdminService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Filter", Namespace="http://schemas.datacontract.org/2004/07/ESBackupServer.App.Objects.Filters")]
    public enum Filter : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Verified = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unverified = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Banned = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        All = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Sort", Namespace="http://schemas.datacontract.org/2004/07/ESBackupServer.App.Objects.Filters")]
    public enum Sort : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Asc = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Desc = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Client", Namespace="http://schemas.datacontract.org/2004/07/ESBackupServer.Database.Objects", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Client : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IDAdministratorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsOnlineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ReportIntervalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatusReportEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UTCLastBackupTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UTCLastConfigUpdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UTCLastStatusReportTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UTCRegistrationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IDAdministrator {
            get {
                return this.IDAdministratorField;
            }
            set {
                if ((this.IDAdministratorField.Equals(value) != true)) {
                    this.IDAdministratorField = value;
                    this.RaisePropertyChanged("IDAdministrator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsOnline {
            get {
                return this.IsOnlineField;
            }
            set {
                if ((this.IsOnlineField.Equals(value) != true)) {
                    this.IsOnlineField = value;
                    this.RaisePropertyChanged("IsOnline");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ReportInterval {
            get {
                return this.ReportIntervalField;
            }
            set {
                if ((this.ReportIntervalField.Equals(value) != true)) {
                    this.ReportIntervalField = value;
                    this.RaisePropertyChanged("ReportInterval");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StatusReportEnabled {
            get {
                return this.StatusReportEnabledField;
            }
            set {
                if ((this.StatusReportEnabledField.Equals(value) != true)) {
                    this.StatusReportEnabledField = value;
                    this.RaisePropertyChanged("StatusReportEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UTCLastBackupTime {
            get {
                return this.UTCLastBackupTimeField;
            }
            set {
                if ((this.UTCLastBackupTimeField.Equals(value) != true)) {
                    this.UTCLastBackupTimeField = value;
                    this.RaisePropertyChanged("UTCLastBackupTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UTCLastConfigUpdate {
            get {
                return this.UTCLastConfigUpdateField;
            }
            set {
                if ((this.UTCLastConfigUpdateField.Equals(value) != true)) {
                    this.UTCLastConfigUpdateField = value;
                    this.RaisePropertyChanged("UTCLastConfigUpdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UTCLastStatusReportTime {
            get {
                return this.UTCLastStatusReportTimeField;
            }
            set {
                if ((this.UTCLastStatusReportTimeField.Equals(value) != true)) {
                    this.UTCLastStatusReportTimeField = value;
                    this.RaisePropertyChanged("UTCLastStatusReportTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UTCRegistrationDate {
            get {
                return this.UTCRegistrationDateField;
            }
            set {
                if ((this.UTCRegistrationDateField.Equals(value) != true)) {
                    this.UTCRegistrationDateField = value;
                    this.RaisePropertyChanged("UTCRegistrationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BackupInfo", Namespace="http://schemas.datacontract.org/2004/07/ESBackupServer.Database.Objects", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class BackupInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte BackupTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BaseBackupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CompressedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DestinationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EmailSentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IDBackupTemplateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PathOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UTCEndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UTCExpirationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UTCStartField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte BackupType {
            get {
                return this.BackupTypeField;
            }
            set {
                if ((this.BackupTypeField.Equals(value) != true)) {
                    this.BackupTypeField = value;
                    this.RaisePropertyChanged("BackupType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BaseBackupID {
            get {
                return this.BaseBackupIDField;
            }
            set {
                if ((this.BaseBackupIDField.Equals(value) != true)) {
                    this.BaseBackupIDField = value;
                    this.RaisePropertyChanged("BaseBackupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Compressed {
            get {
                return this.CompressedField;
            }
            set {
                if ((this.CompressedField.Equals(value) != true)) {
                    this.CompressedField = value;
                    this.RaisePropertyChanged("Compressed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Destination {
            get {
                return this.DestinationField;
            }
            set {
                if ((object.ReferenceEquals(this.DestinationField, value) != true)) {
                    this.DestinationField = value;
                    this.RaisePropertyChanged("Destination");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EmailSent {
            get {
                return this.EmailSentField;
            }
            set {
                if ((this.EmailSentField.Equals(value) != true)) {
                    this.EmailSentField = value;
                    this.RaisePropertyChanged("EmailSent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IDBackupTemplate {
            get {
                return this.IDBackupTemplateField;
            }
            set {
                if ((this.IDBackupTemplateField.Equals(value) != true)) {
                    this.IDBackupTemplateField = value;
                    this.RaisePropertyChanged("IDBackupTemplate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IDClient {
            get {
                return this.IDClientField;
            }
            set {
                if ((this.IDClientField.Equals(value) != true)) {
                    this.IDClientField = value;
                    this.RaisePropertyChanged("IDClient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PathOrder {
            get {
                return this.PathOrderField;
            }
            set {
                if ((this.PathOrderField.Equals(value) != true)) {
                    this.PathOrderField = value;
                    this.RaisePropertyChanged("PathOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Source {
            get {
                return this.SourceField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceField, value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UTCEnd {
            get {
                return this.UTCEndField;
            }
            set {
                if ((this.UTCEndField.Equals(value) != true)) {
                    this.UTCEndField = value;
                    this.RaisePropertyChanged("UTCEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UTCExpiration {
            get {
                return this.UTCExpirationField;
            }
            set {
                if ((this.UTCExpirationField.Equals(value) != true)) {
                    this.UTCExpirationField = value;
                    this.RaisePropertyChanged("UTCExpiration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UTCStart {
            get {
                return this.UTCStartField;
            }
            set {
                if ((this.UTCStartField.Equals(value) != true)) {
                    this.UTCStartField = value;
                    this.RaisePropertyChanged("UTCStart");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Log", Namespace="http://schemas.datacontract.org/2004/07/ESBackupServer.Database.Objects", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Log : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> IDBackupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte LogTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UTCTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> IDBackup {
            get {
                return this.IDBackupField;
            }
            set {
                if ((this.IDBackupField.Equals(value) != true)) {
                    this.IDBackupField = value;
                    this.RaisePropertyChanged("IDBackup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IDClient {
            get {
                return this.IDClientField;
            }
            set {
                if ((this.IDClientField.Equals(value) != true)) {
                    this.IDClientField = value;
                    this.RaisePropertyChanged("IDClient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte LogType {
            get {
                return this.LogTypeField;
            }
            set {
                if ((this.LogTypeField.Equals(value) != true)) {
                    this.LogTypeField = value;
                    this.RaisePropertyChanged("LogType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UTCTime {
            get {
                return this.UTCTimeField;
            }
            set {
                if ((this.UTCTimeField.Equals(value) != true)) {
                    this.UTCTimeField = value;
                    this.RaisePropertyChanged("UTCTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Configuration", Namespace="http://schemas.datacontract.org/2004/07/ESBackupServer.App.Objects")]
    [System.SerializableAttribute()]
    public partial class Configuration : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime GeneratedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ReportIntervalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatusReportEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<ESBackupManager.ESBackupServerAdminService.BackupTemplate> TemplatesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Generated {
            get {
                return this.GeneratedField;
            }
            set {
                if ((this.GeneratedField.Equals(value) != true)) {
                    this.GeneratedField = value;
                    this.RaisePropertyChanged("Generated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ReportInterval {
            get {
                return this.ReportIntervalField;
            }
            set {
                if ((this.ReportIntervalField.Equals(value) != true)) {
                    this.ReportIntervalField = value;
                    this.RaisePropertyChanged("ReportInterval");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StatusReportEnabled {
            get {
                return this.StatusReportEnabledField;
            }
            set {
                if ((this.StatusReportEnabledField.Equals(value) != true)) {
                    this.StatusReportEnabledField = value;
                    this.RaisePropertyChanged("StatusReportEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ESBackupManager.ESBackupServerAdminService.BackupTemplate> Templates {
            get {
                return this.TemplatesField;
            }
            set {
                if ((object.ReferenceEquals(this.TemplatesField, value) != true)) {
                    this.TemplatesField = value;
                    this.RaisePropertyChanged("Templates");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BackupTemplate", Namespace="http://schemas.datacontract.org/2004/07/ESBackupServer.Database.Objects", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class BackupTemplate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte BackupTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CRONRepeatIntervalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CompressionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<uint> DaysToExpirationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEmailNotificationEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsNotificationEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<ESBackupManager.ESBackupServerAdminService.BackupTemplatePath> PathsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SearchPatternField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte BackupType {
            get {
                return this.BackupTypeField;
            }
            set {
                if ((this.BackupTypeField.Equals(value) != true)) {
                    this.BackupTypeField = value;
                    this.RaisePropertyChanged("BackupType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CRONRepeatInterval {
            get {
                return this.CRONRepeatIntervalField;
            }
            set {
                if ((object.ReferenceEquals(this.CRONRepeatIntervalField, value) != true)) {
                    this.CRONRepeatIntervalField = value;
                    this.RaisePropertyChanged("CRONRepeatInterval");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Compression {
            get {
                return this.CompressionField;
            }
            set {
                if ((this.CompressionField.Equals(value) != true)) {
                    this.CompressionField = value;
                    this.RaisePropertyChanged("Compression");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<uint> DaysToExpiration {
            get {
                return this.DaysToExpirationField;
            }
            set {
                if ((this.DaysToExpirationField.Equals(value) != true)) {
                    this.DaysToExpirationField = value;
                    this.RaisePropertyChanged("DaysToExpiration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Enabled {
            get {
                return this.EnabledField;
            }
            set {
                if ((this.EnabledField.Equals(value) != true)) {
                    this.EnabledField = value;
                    this.RaisePropertyChanged("Enabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IDClient {
            get {
                return this.IDClientField;
            }
            set {
                if ((this.IDClientField.Equals(value) != true)) {
                    this.IDClientField = value;
                    this.RaisePropertyChanged("IDClient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEmailNotificationEnabled {
            get {
                return this.IsEmailNotificationEnabledField;
            }
            set {
                if ((this.IsEmailNotificationEnabledField.Equals(value) != true)) {
                    this.IsEmailNotificationEnabledField = value;
                    this.RaisePropertyChanged("IsEmailNotificationEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsNotificationEnabled {
            get {
                return this.IsNotificationEnabledField;
            }
            set {
                if ((this.IsNotificationEnabledField.Equals(value) != true)) {
                    this.IsNotificationEnabledField = value;
                    this.RaisePropertyChanged("IsNotificationEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ESBackupManager.ESBackupServerAdminService.BackupTemplatePath> Paths {
            get {
                return this.PathsField;
            }
            set {
                if ((object.ReferenceEquals(this.PathsField, value) != true)) {
                    this.PathsField = value;
                    this.RaisePropertyChanged("Paths");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SearchPattern {
            get {
                return this.SearchPatternField;
            }
            set {
                if ((object.ReferenceEquals(this.SearchPatternField, value) != true)) {
                    this.SearchPatternField = value;
                    this.RaisePropertyChanged("SearchPattern");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BackupTemplatePath", Namespace="http://schemas.datacontract.org/2004/07/ESBackupServer.Database.Objects", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class BackupTemplatePath : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DestinationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IDBackupTemplateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short PathOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte TargetTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Destination {
            get {
                return this.DestinationField;
            }
            set {
                if ((object.ReferenceEquals(this.DestinationField, value) != true)) {
                    this.DestinationField = value;
                    this.RaisePropertyChanged("Destination");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IDBackupTemplate {
            get {
                return this.IDBackupTemplateField;
            }
            set {
                if ((this.IDBackupTemplateField.Equals(value) != true)) {
                    this.IDBackupTemplateField = value;
                    this.RaisePropertyChanged("IDBackupTemplate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short PathOrder {
            get {
                return this.PathOrderField;
            }
            set {
                if ((this.PathOrderField.Equals(value) != true)) {
                    this.PathOrderField = value;
                    this.RaisePropertyChanged("PathOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Source {
            get {
                return this.SourceField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceField, value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte TargetType {
            get {
                return this.TargetTypeField;
            }
            set {
                if ((this.TargetTypeField.Equals(value) != true)) {
                    this.TargetTypeField = value;
                    this.RaisePropertyChanged("TargetType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Administrator", Namespace="http://schemas.datacontract.org/2004/07/ESBackupServer.Database.Objects", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Administrator : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<ESBackupManager.ESBackupServerAdminService.Email> EmailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UTCRegistrationDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ESBackupManager.ESBackupServerAdminService.Email> Emails {
            get {
                return this.EmailsField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailsField, value) != true)) {
                    this.EmailsField = value;
                    this.RaisePropertyChanged("Emails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UTCRegistrationDate {
            get {
                return this.UTCRegistrationDateField;
            }
            set {
                if ((this.UTCRegistrationDateField.Equals(value) != true)) {
                    this.UTCRegistrationDateField = value;
                    this.RaisePropertyChanged("UTCRegistrationDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Email", Namespace="http://schemas.datacontract.org/2004/07/ESBackupServer.Database.Objects", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Email : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IDAdministratorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDefaultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IDAdministrator {
            get {
                return this.IDAdministratorField;
            }
            set {
                if ((this.IDAdministratorField.Equals(value) != true)) {
                    this.IDAdministratorField = value;
                    this.RaisePropertyChanged("IDAdministrator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDefault {
            get {
                return this.IsDefaultField;
            }
            set {
                if ((this.IsDefaultField.Equals(value) != true)) {
                    this.IsDefaultField = value;
                    this.RaisePropertyChanged("IsDefault");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Login", Namespace="http://schemas.datacontract.org/2004/07/ESBackupServer.Database.Objects", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Login : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UTCTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IDClient {
            get {
                return this.IDClientField;
            }
            set {
                if ((this.IDClientField.Equals(value) != true)) {
                    this.IDClientField = value;
                    this.RaisePropertyChanged("IDClient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IP {
            get {
                return this.IPField;
            }
            set {
                if ((object.ReferenceEquals(this.IPField, value) != true)) {
                    this.IPField = value;
                    this.RaisePropertyChanged("IP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UTCTime {
            get {
                return this.UTCTimeField;
            }
            set {
                if ((this.UTCTimeField.Equals(value) != true)) {
                    this.UTCTimeField = value;
                    this.RaisePropertyChanged("UTCTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ESBackupServerAdminService.IESBackupServerAdminService")]
    public interface IESBackupServerAdminService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESBackupServerAdminService/GetClients", ReplyAction="http://tempuri.org/IESBackupServerAdminService/GetClientsResponse")]
        System.Collections.Generic.List<ESBackupManager.ESBackupServerAdminService.Client> GetClients(ESBackupManager.ESBackupServerAdminService.Filter filter, ESBackupManager.ESBackupServerAdminService.Sort sort);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESBackupServerAdminService/GetClients", ReplyAction="http://tempuri.org/IESBackupServerAdminService/GetClientsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ESBackupManager.ESBackupServerAdminService.Client>> GetClientsAsync(ESBackupManager.ESBackupServerAdminService.Filter filter, ESBackupManager.ESBackupServerAdminService.Sort sort);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESBackupServerAdminService/GetClientByID", ReplyAction="http://tempuri.org/IESBackupServerAdminService/GetClientByIDResponse")]
        ESBackupManager.ESBackupServerAdminService.Client GetClientByID(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESBackupServerAdminService/GetClientByID", ReplyAction="http://tempuri.org/IESBackupServerAdminService/GetClientByIDResponse")]
        System.Threading.Tasks.Task<ESBackupManager.ESBackupServerAdminService.Client> GetClientByIDAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESBackupServerAdminService/GetBackupsByClientID", ReplyAction="http://tempuri.org/IESBackupServerAdminService/GetBackupsByClientIDResponse")]
        System.Collections.Generic.List<ESBackupManager.ESBackupServerAdminService.BackupInfo> GetBackupsByClientID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESBackupServerAdminService/GetBackupsByClientID", ReplyAction="http://tempuri.org/IESBackupServerAdminService/GetBackupsByClientIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ESBackupManager.ESBackupServerAdminService.BackupInfo>> GetBackupsByClientIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESBackupServerAdminService/GetBackupByID", ReplyAction="http://tempuri.org/IESBackupServerAdminService/GetBackupByIDResponse")]
        ESBackupManager.ESBackupServerAdminService.BackupInfo GetBackupByID(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESBackupServerAdminService/GetBackupByID", ReplyAction="http://tempuri.org/IESBackupServerAdminService/GetBackupByIDResponse")]
        System.Threading.Tasks.Task<ESBackupManager.ESBackupServerAdminService.BackupInfo> GetBackupByIDAsync(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESBackupServerAdminService/GetLogsByClientID", ReplyAction="http://tempuri.org/IESBackupServerAdminService/GetLogsByClientIDResponse")]
        System.Collections.Generic.List<ESBackupManager.ESBackupServerAdminService.Log> GetLogsByClientID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESBackupServerAdminService/GetLogsByClientID", ReplyAction="http://tempuri.org/IESBackupServerAdminService/GetLogsByClientIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ESBackupManager.ESBackupServerAdminService.Log>> GetLogsByClientIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESBackupServerAdminService/GetLogsByBackupID", ReplyAction="http://tempuri.org/IESBackupServerAdminService/GetLogsByBackupIDResponse")]
        System.Collections.Generic.List<ESBackupManager.ESBackupServerAdminService.Log> GetLogsByBackupID(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESBackupServerAdminService/GetLogsByBackupID", ReplyAction="http://tempuri.org/IESBackupServerAdminService/GetLogsByBackupIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ESBackupManager.ESBackupServerAdminService.Log>> GetLogsByBackupIDAsync(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESBackupServerAdminService/GetConfigurationByClientID", ReplyAction="http://tempuri.org/IESBackupServerAdminService/GetConfigurationByClientIDResponse" +
            "")]
        ESBackupManager.ESBackupServerAdminService.Configuration GetConfigurationByClientID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESBackupServerAdminService/GetConfigurationByClientID", ReplyAction="http://tempuri.org/IESBackupServerAdminService/GetConfigurationByClientIDResponse" +
            "")]
        System.Threading.Tasks.Task<ESBackupManager.ESBackupServerAdminService.Configuration> GetConfigurationByClientIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESBackupServerAdminService/GetTemplateByID", ReplyAction="http://tempuri.org/IESBackupServerAdminService/GetTemplateByIDResponse")]
        ESBackupManager.ESBackupServerAdminService.BackupTemplate GetTemplateByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESBackupServerAdminService/GetTemplateByID", ReplyAction="http://tempuri.org/IESBackupServerAdminService/GetTemplateByIDResponse")]
        System.Threading.Tasks.Task<ESBackupManager.ESBackupServerAdminService.BackupTemplate> GetTemplateByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESBackupServerAdminService/Login", ReplyAction="http://tempuri.org/IESBackupServerAdminService/LoginResponse")]
        bool Login(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESBackupServerAdminService/Login", ReplyAction="http://tempuri.org/IESBackupServerAdminService/LoginResponse")]
        System.Threading.Tasks.Task<bool> LoginAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESBackupServerAdminService/GetProfile", ReplyAction="http://tempuri.org/IESBackupServerAdminService/GetProfileResponse")]
        ESBackupManager.ESBackupServerAdminService.Administrator GetProfile(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESBackupServerAdminService/GetProfile", ReplyAction="http://tempuri.org/IESBackupServerAdminService/GetProfileResponse")]
        System.Threading.Tasks.Task<ESBackupManager.ESBackupServerAdminService.Administrator> GetProfileAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESBackupServerAdminService/GetLoginsByClient", ReplyAction="http://tempuri.org/IESBackupServerAdminService/GetLoginsByClientResponse")]
        System.Collections.Generic.List<ESBackupManager.ESBackupServerAdminService.Login> GetLoginsByClient(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESBackupServerAdminService/GetLoginsByClient", ReplyAction="http://tempuri.org/IESBackupServerAdminService/GetLoginsByClientResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ESBackupManager.ESBackupServerAdminService.Login>> GetLoginsByClientAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESBackupServerAdminService/UpdateClient", ReplyAction="http://tempuri.org/IESBackupServerAdminService/UpdateClientResponse")]
        void UpdateClient(ESBackupManager.ESBackupServerAdminService.Client client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESBackupServerAdminService/UpdateClient", ReplyAction="http://tempuri.org/IESBackupServerAdminService/UpdateClientResponse")]
        System.Threading.Tasks.Task UpdateClientAsync(ESBackupManager.ESBackupServerAdminService.Client client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESBackupServerAdminService/RemoveBackup", ReplyAction="http://tempuri.org/IESBackupServerAdminService/RemoveBackupResponse")]
        void RemoveBackup(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESBackupServerAdminService/RemoveBackup", ReplyAction="http://tempuri.org/IESBackupServerAdminService/RemoveBackupResponse")]
        System.Threading.Tasks.Task RemoveBackupAsync(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESBackupServerAdminService/UpdateBackup", ReplyAction="http://tempuri.org/IESBackupServerAdminService/UpdateBackupResponse")]
        void UpdateBackup(ESBackupManager.ESBackupServerAdminService.BackupInfo backup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESBackupServerAdminService/UpdateBackup", ReplyAction="http://tempuri.org/IESBackupServerAdminService/UpdateBackupResponse")]
        System.Threading.Tasks.Task UpdateBackupAsync(ESBackupManager.ESBackupServerAdminService.BackupInfo backup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESBackupServerAdminService/SaveTemplate", ReplyAction="http://tempuri.org/IESBackupServerAdminService/SaveTemplateResponse")]
        void SaveTemplate(ESBackupManager.ESBackupServerAdminService.BackupTemplate template);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESBackupServerAdminService/SaveTemplate", ReplyAction="http://tempuri.org/IESBackupServerAdminService/SaveTemplateResponse")]
        System.Threading.Tasks.Task SaveTemplateAsync(ESBackupManager.ESBackupServerAdminService.BackupTemplate template);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESBackupServerAdminService/SetTemplateStatus", ReplyAction="http://tempuri.org/IESBackupServerAdminService/SetTemplateStatusResponse")]
        void SetTemplateStatus(long id, bool IsEnabled);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESBackupServerAdminService/SetTemplateStatus", ReplyAction="http://tempuri.org/IESBackupServerAdminService/SetTemplateStatusResponse")]
        System.Threading.Tasks.Task SetTemplateStatusAsync(long id, bool IsEnabled);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESBackupServerAdminService/RemoveBackupTemplate", ReplyAction="http://tempuri.org/IESBackupServerAdminService/RemoveBackupTemplateResponse")]
        void RemoveBackupTemplate(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESBackupServerAdminService/RemoveBackupTemplate", ReplyAction="http://tempuri.org/IESBackupServerAdminService/RemoveBackupTemplateResponse")]
        System.Threading.Tasks.Task RemoveBackupTemplateAsync(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESBackupServerAdminService/RemoveBackupTemplatePath", ReplyAction="http://tempuri.org/IESBackupServerAdminService/RemoveBackupTemplatePathResponse")]
        void RemoveBackupTemplatePath(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESBackupServerAdminService/RemoveBackupTemplatePath", ReplyAction="http://tempuri.org/IESBackupServerAdminService/RemoveBackupTemplatePathResponse")]
        System.Threading.Tasks.Task RemoveBackupTemplatePathAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESBackupServerAdminService/UpdateAdministrator", ReplyAction="http://tempuri.org/IESBackupServerAdminService/UpdateAdministratorResponse")]
        void UpdateAdministrator(ESBackupManager.ESBackupServerAdminService.Administrator admin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESBackupServerAdminService/UpdateAdministrator", ReplyAction="http://tempuri.org/IESBackupServerAdminService/UpdateAdministratorResponse")]
        System.Threading.Tasks.Task UpdateAdministratorAsync(ESBackupManager.ESBackupServerAdminService.Administrator admin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESBackupServerAdminService/ClientConfigUpdated", ReplyAction="http://tempuri.org/IESBackupServerAdminService/ClientConfigUpdatedResponse")]
        void ClientConfigUpdated(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IESBackupServerAdminService/ClientConfigUpdated", ReplyAction="http://tempuri.org/IESBackupServerAdminService/ClientConfigUpdatedResponse")]
        System.Threading.Tasks.Task ClientConfigUpdatedAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IESBackupServerAdminServiceChannel : ESBackupManager.ESBackupServerAdminService.IESBackupServerAdminService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ESBackupServerAdminServiceClient : System.ServiceModel.ClientBase<ESBackupManager.ESBackupServerAdminService.IESBackupServerAdminService>, ESBackupManager.ESBackupServerAdminService.IESBackupServerAdminService {
        
        public ESBackupServerAdminServiceClient() {
        }
        
        public ESBackupServerAdminServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ESBackupServerAdminServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ESBackupServerAdminServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ESBackupServerAdminServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<ESBackupManager.ESBackupServerAdminService.Client> GetClients(ESBackupManager.ESBackupServerAdminService.Filter filter, ESBackupManager.ESBackupServerAdminService.Sort sort) {
            return base.Channel.GetClients(filter, sort);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ESBackupManager.ESBackupServerAdminService.Client>> GetClientsAsync(ESBackupManager.ESBackupServerAdminService.Filter filter, ESBackupManager.ESBackupServerAdminService.Sort sort) {
            return base.Channel.GetClientsAsync(filter, sort);
        }
        
        public ESBackupManager.ESBackupServerAdminService.Client GetClientByID(int ID) {
            return base.Channel.GetClientByID(ID);
        }
        
        public System.Threading.Tasks.Task<ESBackupManager.ESBackupServerAdminService.Client> GetClientByIDAsync(int ID) {
            return base.Channel.GetClientByIDAsync(ID);
        }
        
        public System.Collections.Generic.List<ESBackupManager.ESBackupServerAdminService.BackupInfo> GetBackupsByClientID(int id) {
            return base.Channel.GetBackupsByClientID(id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ESBackupManager.ESBackupServerAdminService.BackupInfo>> GetBackupsByClientIDAsync(int id) {
            return base.Channel.GetBackupsByClientIDAsync(id);
        }
        
        public ESBackupManager.ESBackupServerAdminService.BackupInfo GetBackupByID(long id) {
            return base.Channel.GetBackupByID(id);
        }
        
        public System.Threading.Tasks.Task<ESBackupManager.ESBackupServerAdminService.BackupInfo> GetBackupByIDAsync(long id) {
            return base.Channel.GetBackupByIDAsync(id);
        }
        
        public System.Collections.Generic.List<ESBackupManager.ESBackupServerAdminService.Log> GetLogsByClientID(int id) {
            return base.Channel.GetLogsByClientID(id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ESBackupManager.ESBackupServerAdminService.Log>> GetLogsByClientIDAsync(int id) {
            return base.Channel.GetLogsByClientIDAsync(id);
        }
        
        public System.Collections.Generic.List<ESBackupManager.ESBackupServerAdminService.Log> GetLogsByBackupID(long id) {
            return base.Channel.GetLogsByBackupID(id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ESBackupManager.ESBackupServerAdminService.Log>> GetLogsByBackupIDAsync(long id) {
            return base.Channel.GetLogsByBackupIDAsync(id);
        }
        
        public ESBackupManager.ESBackupServerAdminService.Configuration GetConfigurationByClientID(int id) {
            return base.Channel.GetConfigurationByClientID(id);
        }
        
        public System.Threading.Tasks.Task<ESBackupManager.ESBackupServerAdminService.Configuration> GetConfigurationByClientIDAsync(int id) {
            return base.Channel.GetConfigurationByClientIDAsync(id);
        }
        
        public ESBackupManager.ESBackupServerAdminService.BackupTemplate GetTemplateByID(int id) {
            return base.Channel.GetTemplateByID(id);
        }
        
        public System.Threading.Tasks.Task<ESBackupManager.ESBackupServerAdminService.BackupTemplate> GetTemplateByIDAsync(int id) {
            return base.Channel.GetTemplateByIDAsync(id);
        }
        
        public bool Login(string username, string password) {
            return base.Channel.Login(username, password);
        }
        
        public System.Threading.Tasks.Task<bool> LoginAsync(string username, string password) {
            return base.Channel.LoginAsync(username, password);
        }
        
        public ESBackupManager.ESBackupServerAdminService.Administrator GetProfile(string username) {
            return base.Channel.GetProfile(username);
        }
        
        public System.Threading.Tasks.Task<ESBackupManager.ESBackupServerAdminService.Administrator> GetProfileAsync(string username) {
            return base.Channel.GetProfileAsync(username);
        }
        
        public System.Collections.Generic.List<ESBackupManager.ESBackupServerAdminService.Login> GetLoginsByClient(int ID) {
            return base.Channel.GetLoginsByClient(ID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ESBackupManager.ESBackupServerAdminService.Login>> GetLoginsByClientAsync(int ID) {
            return base.Channel.GetLoginsByClientAsync(ID);
        }
        
        public void UpdateClient(ESBackupManager.ESBackupServerAdminService.Client client) {
            base.Channel.UpdateClient(client);
        }
        
        public System.Threading.Tasks.Task UpdateClientAsync(ESBackupManager.ESBackupServerAdminService.Client client) {
            return base.Channel.UpdateClientAsync(client);
        }
        
        public void RemoveBackup(long id) {
            base.Channel.RemoveBackup(id);
        }
        
        public System.Threading.Tasks.Task RemoveBackupAsync(long id) {
            return base.Channel.RemoveBackupAsync(id);
        }
        
        public void UpdateBackup(ESBackupManager.ESBackupServerAdminService.BackupInfo backup) {
            base.Channel.UpdateBackup(backup);
        }
        
        public System.Threading.Tasks.Task UpdateBackupAsync(ESBackupManager.ESBackupServerAdminService.BackupInfo backup) {
            return base.Channel.UpdateBackupAsync(backup);
        }
        
        public void SaveTemplate(ESBackupManager.ESBackupServerAdminService.BackupTemplate template) {
            base.Channel.SaveTemplate(template);
        }
        
        public System.Threading.Tasks.Task SaveTemplateAsync(ESBackupManager.ESBackupServerAdminService.BackupTemplate template) {
            return base.Channel.SaveTemplateAsync(template);
        }
        
        public void SetTemplateStatus(long id, bool IsEnabled) {
            base.Channel.SetTemplateStatus(id, IsEnabled);
        }
        
        public System.Threading.Tasks.Task SetTemplateStatusAsync(long id, bool IsEnabled) {
            return base.Channel.SetTemplateStatusAsync(id, IsEnabled);
        }
        
        public void RemoveBackupTemplate(long id) {
            base.Channel.RemoveBackupTemplate(id);
        }
        
        public System.Threading.Tasks.Task RemoveBackupTemplateAsync(long id) {
            return base.Channel.RemoveBackupTemplateAsync(id);
        }
        
        public void RemoveBackupTemplatePath(System.Guid id) {
            base.Channel.RemoveBackupTemplatePath(id);
        }
        
        public System.Threading.Tasks.Task RemoveBackupTemplatePathAsync(System.Guid id) {
            return base.Channel.RemoveBackupTemplatePathAsync(id);
        }
        
        public void UpdateAdministrator(ESBackupManager.ESBackupServerAdminService.Administrator admin) {
            base.Channel.UpdateAdministrator(admin);
        }
        
        public System.Threading.Tasks.Task UpdateAdministratorAsync(ESBackupManager.ESBackupServerAdminService.Administrator admin) {
            return base.Channel.UpdateAdministratorAsync(admin);
        }
        
        public void ClientConfigUpdated(int id) {
            base.Channel.ClientConfigUpdated(id);
        }
        
        public System.Threading.Tasks.Task ClientConfigUpdatedAsync(int id) {
            return base.Channel.ClientConfigUpdatedAsync(id);
        }
    }
}
